{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nlet sortDirection = true;\nlet activeRow = null;\n\nconst sortTable = (columnIndex) => {\n  const rows = Array.from(table.querySelectorAll('tbody tr'));\n\n  rows.sort((rowA, rowB) => {\n    let cellA = rowA.children[columnIndex].innerText;\n    let cellB = rowB.children[columnIndex].innerText;\n\n    if (columnIndex === 3) {\n      cellA = parseInt(cellA);\n      cellB = parseInt(cellB);\n    } else if (columnIndex === 4) {\n      cellA = parseFloat(cellA.replace(/[$,]/g, ''));\n      cellB = parseFloat(cellB.replace(/[$,]/g, ''));\n    }\n\n    if (typeof cellA === 'number' && typeof cellB === 'number') {\n      return sortDirection ? cellA - cellB : cellB - cellA;\n    }\n\n    return sortDirection\n      ? cellA.localeCompare(cellB)\n      : cellB.localeCompare(cellA);\n  });\n\n  rows.forEach((row) => table.querySelector('tbody').appendChild(row));\n  sortDirection = !sortDirection;\n};\n\ntable.querySelectorAll('th').forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortTable(index);\n  });\n});\n\ntable.querySelectorAll('tbody tr').forEach((row) => {\n  row.addEventListener('click', () => {\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n    row.classList.add('active');\n    activeRow = row;\n  });\n});\n\nconst formHtml = `\n<form class=\"new-employee-form\">\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n  <button type=\"button\" id=\"save-button\">Save to table</button>\n</form>\n`;\n\ndocument.body.insertAdjacentHTML('beforeend', formHtml);\n\nconst form = document.querySelector('.new-employee-form');\nconst notification = document.createElement('div');\n\nnotification.className = 'notification';\nnotification.setAttribute('data-qa', 'notification');\ndocument.body.appendChild(notification);\n\nconst showNotification = (message, type) => {\n  notification.innerHTML = `<span class=\"title\">${type.toUpperCase()}</span> ${message}`;\n  notification.className = `notification ${type}`;\n\n  setTimeout(() => {\n    notification.className = `notification`;\n  }, 2000);\n};\n\ndocument.getElementById('save-button').addEventListener('click', () => {\n  const nawName = form.querySelector('input[name=\"name\"]').value;\n  const position = form.querySelector('input[name=\"position\"]').value;\n  const office = form.querySelector('select[name=\"office\"]').value;\n  const age = form.querySelector('input[name=\"age\"]').value;\n  const salary = form.querySelector('input[name=\"salary\"]').value;\n\n  let isValid = true;\n\n  if (nawName.length < 4) {\n    showNotification('Name must be at least 4 characters long.', 'error');\n    isValid = false;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('Age must be between 18 and 90.', 'error');\n    isValid = false;\n  }\n\n  if (!position || !office || !salary) {\n    showNotification('All fields are required.', 'error');\n    isValid = false;\n  }\n\n  if (isValid) {\n    const newRow = document.createElement('tr');\n\n    const formattedSalary = `$${parseInt(salary).toLocaleString('en-US')}`;\n\n    newRow.innerHTML = `<td>${nawName}</td><td>${position}</td><td>${office}</td><td>${age}</td><td>${formattedSalary}</td>`;\n    table.querySelector('tbody').appendChild(newRow);\n    showNotification('Employee added successfully!', 'success');\n\n    form.reset();\n  }\n});\n\ntable.querySelectorAll('tbody td').forEach((cell) => {\n  cell.addEventListener('dblclick', () => {\n    const initialValue = cell.innerText;\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = initialValue;\n    cell.innerText = '';\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      cell.innerText = input.value || initialValue;\n    });\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        cell.innerText = input.value || initialValue;\n      }\n    });\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}