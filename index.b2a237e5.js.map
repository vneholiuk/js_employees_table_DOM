{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar sortDirection = true;\nvar activeRow = null;\nvar sortTable = function(columnIndex) {\n    var rows = Array.from(table.querySelectorAll(\"tbody tr\"));\n    rows.sort(function(rowA, rowB) {\n        var cellA = rowA.children[columnIndex].innerText;\n        var cellB = rowB.children[columnIndex].innerText;\n        if (columnIndex === 3) {\n            cellA = parseInt(cellA);\n            cellB = parseInt(cellB);\n        } else if (columnIndex === 4) {\n            cellA = parseFloat(cellA.replace(/[$,]/g, \"\"));\n            cellB = parseFloat(cellB.replace(/[$,]/g, \"\"));\n        }\n        if (typeof cellA === \"number\" && typeof cellB === \"number\") return sortDirection ? cellA - cellB : cellB - cellA;\n        return sortDirection ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n    });\n    rows.forEach(function(row) {\n        return table.querySelector(\"tbody\").appendChild(row);\n    });\n    sortDirection = !sortDirection;\n};\ntable.querySelectorAll(\"th\").forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortTable(index);\n    });\n});\ntable.querySelectorAll(\"tbody tr\").forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        if (activeRow) activeRow.classList.remove(\"active\");\n        row.classList.add(\"active\");\n        activeRow = row;\n    });\n});\nvar formHtml = '\\n<form class=\"new-employee-form\">\\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n  <label>Office:\\n    <select name=\"office\" data-qa=\"office\">\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select>\\n  </label>\\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n  <button type=\"button\" id=\"save-button\">Save to table</button>\\n</form>\\n';\ndocument.body.insertAdjacentHTML(\"beforeend\", formHtml);\nvar form = document.querySelector(\".new-employee-form\");\nvar notification = document.createElement(\"div\");\nnotification.className = \"notification\";\nnotification.setAttribute(\"data-qa\", \"notification\");\ndocument.body.appendChild(notification);\nvar showNotification = function(message, type) {\n    notification.innerHTML = '<span class=\"title\">'.concat(type.toUpperCase(), \"</span> \").concat(message);\n    notification.className = \"notification \".concat(type);\n    setTimeout(function() {\n        notification.className = \"notification\";\n    }, 2000);\n};\ndocument.getElementById(\"save-button\").addEventListener(\"click\", function() {\n    var nawName = form.querySelector('input[name=\"name\"]').value;\n    var position = form.querySelector('input[name=\"position\"]').value;\n    var office = form.querySelector('select[name=\"office\"]').value;\n    var age = form.querySelector('input[name=\"age\"]').value;\n    var salary = form.querySelector('input[name=\"salary\"]').value;\n    var isValid = true;\n    if (nawName.length < 4) {\n        showNotification(\"Name must be at least 4 characters long.\", \"error\");\n        isValid = false;\n    }\n    if (age < 18 || age > 90) {\n        showNotification(\"Age must be between 18 and 90.\", \"error\");\n        isValid = false;\n    }\n    if (!position || !office || !salary) {\n        showNotification(\"All fields are required.\", \"error\");\n        isValid = false;\n    }\n    if (isValid) {\n        var newRow = document.createElement(\"tr\");\n        var formattedSalary = \"$\".concat(parseInt(salary).toLocaleString(\"en-US\"));\n        newRow.innerHTML = \"<td>\".concat(nawName, \"</td><td>\").concat(position, \"</td><td>\").concat(office, \"</td><td>\").concat(age, \"</td><td>\").concat(formattedSalary, \"</td>\");\n        table.querySelector(\"tbody\").appendChild(newRow);\n        showNotification(\"Employee added successfully!\", \"success\");\n        form.reset();\n    }\n});\ntable.querySelectorAll(\"tbody td\").forEach(function(cell) {\n    cell.addEventListener(\"dblclick\", function() {\n        var initialValue = cell.innerText;\n        var input = document.createElement(\"input\");\n        input.className = \"cell-input\";\n        input.value = initialValue;\n        cell.innerText = \"\";\n        cell.appendChild(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            cell.innerText = input.value || initialValue;\n        });\n        input.addEventListener(\"keypress\", function(e) {\n            if (e.key === \"Enter\") cell.innerText = input.value || initialValue;\n        });\n    });\n});\n\n//# sourceMappingURL=index.b2a237e5.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nlet sortDirection = true;\nlet activeRow = null;\n\nconst sortTable = (columnIndex) => {\n  const rows = Array.from(table.querySelectorAll('tbody tr'));\n\n  rows.sort((rowA, rowB) => {\n    let cellA = rowA.children[columnIndex].innerText;\n    let cellB = rowB.children[columnIndex].innerText;\n\n    if (columnIndex === 3) {\n      cellA = parseInt(cellA);\n      cellB = parseInt(cellB);\n    } else if (columnIndex === 4) {\n      cellA = parseFloat(cellA.replace(/[$,]/g, ''));\n      cellB = parseFloat(cellB.replace(/[$,]/g, ''));\n    }\n\n    if (typeof cellA === 'number' && typeof cellB === 'number') {\n      return sortDirection ? cellA - cellB : cellB - cellA;\n    }\n\n    return sortDirection\n      ? cellA.localeCompare(cellB)\n      : cellB.localeCompare(cellA);\n  });\n\n  rows.forEach((row) => table.querySelector('tbody').appendChild(row));\n  sortDirection = !sortDirection;\n};\n\ntable.querySelectorAll('th').forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortTable(index);\n  });\n});\n\ntable.querySelectorAll('tbody tr').forEach((row) => {\n  row.addEventListener('click', () => {\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n    row.classList.add('active');\n    activeRow = row;\n  });\n});\n\nconst formHtml = `\n<form class=\"new-employee-form\">\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n  <button type=\"button\" id=\"save-button\">Save to table</button>\n</form>\n`;\n\ndocument.body.insertAdjacentHTML('beforeend', formHtml);\n\nconst form = document.querySelector('.new-employee-form');\nconst notification = document.createElement('div');\n\nnotification.className = 'notification';\nnotification.setAttribute('data-qa', 'notification');\ndocument.body.appendChild(notification);\n\nconst showNotification = (message, type) => {\n  notification.innerHTML = `<span class=\"title\">${type.toUpperCase()}</span> ${message}`;\n  notification.className = `notification ${type}`;\n\n  setTimeout(() => {\n    notification.className = `notification`;\n  }, 2000);\n};\n\ndocument.getElementById('save-button').addEventListener('click', () => {\n  const nawName = form.querySelector('input[name=\"name\"]').value;\n  const position = form.querySelector('input[name=\"position\"]').value;\n  const office = form.querySelector('select[name=\"office\"]').value;\n  const age = form.querySelector('input[name=\"age\"]').value;\n  const salary = form.querySelector('input[name=\"salary\"]').value;\n\n  let isValid = true;\n\n  if (nawName.length < 4) {\n    showNotification('Name must be at least 4 characters long.', 'error');\n    isValid = false;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('Age must be between 18 and 90.', 'error');\n    isValid = false;\n  }\n\n  if (!position || !office || !salary) {\n    showNotification('All fields are required.', 'error');\n    isValid = false;\n  }\n\n  if (isValid) {\n    const newRow = document.createElement('tr');\n\n    const formattedSalary = `$${parseInt(salary).toLocaleString('en-US')}`;\n\n    newRow.innerHTML = `<td>${nawName}</td><td>${position}</td><td>${office}</td><td>${age}</td><td>${formattedSalary}</td>`;\n    table.querySelector('tbody').appendChild(newRow);\n    showNotification('Employee added successfully!', 'success');\n\n    form.reset();\n  }\n});\n\ntable.querySelectorAll('tbody td').forEach((cell) => {\n  cell.addEventListener('dblclick', () => {\n    const initialValue = cell.innerText;\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = initialValue;\n    cell.innerText = '';\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      cell.innerText = input.value || initialValue;\n    });\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        cell.innerText = input.value || initialValue;\n      }\n    });\n  });\n});\n"],"names":["table","document","querySelector","sortDirection","activeRow","sortTable","columnIndex","rows","Array","from","querySelectorAll","sort","rowA","rowB","cellA","children","innerText","cellB","parseInt","parseFloat","replace","localeCompare","forEach","row","appendChild","header","index","addEventListener","classList","remove","add","body","insertAdjacentHTML","form","notification","createElement","className","setAttribute","showNotification","message","type","innerHTML","concat","toUpperCase","setTimeout","getElementById","nawName","value","position","office","age","salary","isValid","length","newRow","formattedSalary","toLocaleString","reset","cell","initialValue","input","focus","e","key"],"version":3,"file":"index.b2a237e5.js.map"}